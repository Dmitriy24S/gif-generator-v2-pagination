{"version":3,"sources":["components/Error.js","components/Item.js","components/Loader.js","components/Pagination.js","components/SearchBar.js","App.js","index.js"],"names":["Error","setIsError","className","type","onClick","Item","gif","src","images","fixed_height","url","alt","Loader","size","Pagination","pageNumber","currentPage","pageIndex","setCurrentPage","fetchGifs","offsetArr","classes","href","SearchBar","handleSubmit","value","handleChange","onSubmit","onChange","placeholder","required","pattern","App","useState","dataArray","setDataArray","setvalue","isLoading","setIsLoading","itemsPerPage","dataFetchLimit","setDataFetchLimit","pageNumbers","i","Math","ceil","push","offsetNumber","a","fetch","response","ok","console","log","json","data","status","e","preventDefault","target","map","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.411d4dab.chunk.js","sourcesContent":["const Error = ({ setIsError }) => {\r\n  return (\r\n    <div className=\"error\">\r\n      Unable to get Gifs, please try again later\r\n      <button\r\n        type=\"button\"\r\n        className=\"close\"\r\n        aria-label=\"Close\"\r\n        onClick={() => {\r\n          setIsError(false);\r\n        }}\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","function Item({ gif }) {\r\n  return (\r\n    <div\r\n      className=\"item\"\r\n      // key={gif.id}\r\n    >\r\n      <img src={gif.images.fixed_height.url} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import { BiLoaderAlt } from \"react-icons/bi\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div>\r\n      <div className=\"loader\">\r\n        <BiLoaderAlt size={100} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","function Pagination({\r\n  pageNumber,\r\n  currentPage,\r\n  pageIndex,\r\n  setCurrentPage,\r\n  fetchGifs,\r\n  offsetArr,\r\n}) {\r\n  let classes = \"page-item \";\r\n  if (pageNumber === currentPage) {\r\n    classes += \"active\";\r\n  }\r\n  return (\r\n    <li\r\n      // key={pageIndex}\r\n      className={classes}\r\n      onClick={() => {\r\n        setCurrentPage(pageNumber);\r\n        fetchGifs(offsetArr[pageIndex]);\r\n      }}\r\n    >\r\n      <a href=\"#\" className=\"page-link\">\r\n        {pageNumber}\r\n      </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","function SearchBar({ handleSubmit, value, handleChange }) {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        placeholder=\"Search gifs\"\r\n        required\r\n        pattern=\"\\S+.*\"\r\n      />\r\n      <button>Search</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React, { useState } from \"react\";\nimport Error from \"./components/Error\";\nimport Item from \"./components/Item\";\nimport Loader from \"./components/Loader\";\nimport Pagination from \"./components/Pagination\";\nimport SearchBar from \"./components/SearchBar\";\n\nfunction App() {\n  const [dataArray, setDataArray] = useState([]);\n  const [value, setvalue] = useState(\"forest\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n\n  const [dataFetchLimit, setDataFetchLimit] = useState(0);\n  const pageNumbers = [];\n  const offsetArr = [0];\n\n  for (let i = 1; i <= Math.ceil(dataFetchLimit / itemsPerPage); i++) {\n    pageNumbers.push(i);\n    offsetArr.push(itemsPerPage * i);\n  }\n\n  const fetchGifs = async (offsetNumber) => {\n    setIsLoading(true);\n    setIsError(false);\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=tAEFUgagRjRNkU24orQdFB8EHMcNTUSe&limit=${itemsPerPage}&offset=${offsetNumber}&q=${value}`\n      );\n      if (response.ok) {\n        // console.log(response);\n        console.log({ offsetNumber });\n        const data = await response.json();\n        setDataArray(data.data);\n        setDataFetchLimit(100);\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (error) {\n      setIsError(true);\n      console.log(error);\n    }\n    setIsLoading(false);\n  };\n\n  const handleChange = (e) => {\n    setvalue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchGifs(0);\n  };\n\n  if (isError) <Error setIsError={setIsError} />;\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Gif Generator v2</h1>\n      <SearchBar\n        handleSubmit={handleSubmit}\n        value={value}\n        handleChange={handleChange}\n      />\n      <nav>\n        <ul>\n          {pageNumbers.map((pageNumber, pageIndex) => (\n            <Pagination\n              key={pageIndex}\n              pageNumber={pageNumber}\n              currentPage={currentPage}\n              pageIndex={pageIndex}\n              setCurrentPage={setCurrentPage}\n              fetchGifs={fetchGifs}\n              offsetArr={offsetArr}\n            />\n          ))}\n        </ul>\n      </nav>\n      {isLoading && <Loader />}\n      <div className=\"results\">\n        {dataArray.map((gif) => (\n          <Item key={gif.id} gif={gif} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}