{"version":3,"sources":["App.js","index.js"],"names":["App","useState","dataArray","setDataArray","value","setvalue","isLoading","setIsLoading","isError","setIsError","fetchGifs","a","fetch","response","ok","json","data","Error","status","console","log","className","type","onClick","onSubmit","e","preventDefault","onChange","target","placeholder","size","map","gif","src","images","fixed_height","url","alt","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAyFeA,MAtFf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEA,EAAsCR,mBAAS,GAA/C,mBACA,GADA,UACwCA,mBAAS,KAAjD,mBAKMS,GALN,UAKe,uCAAG,8BAAAC,EAAA,6DAChBJ,GAAa,GACbE,GAAW,GAFK,kBAISG,MANzB,kFAM2CR,GAJ3B,YAIRS,EAJQ,QAKDC,GALC,iCAMOD,EAASE,OANhB,OAMNC,EANM,OAOZb,EAAaa,EAAKA,MAPN,8BASN,IAAIC,MAAMJ,EAASK,QATb,0DAYdT,GAAW,GACXU,QAAQC,IAAR,MAbc,QAehBb,GAAa,GAfG,0DAAH,sDA2Bf,OAAIC,EAEA,sBAAKa,UAAU,QAAf,uDAEE,wBACEC,KAAK,SACLD,UAAU,QACV,aAAW,QACXE,QAAS,WACPd,GAAW,IALf,SAQE,sBAAM,cAAY,OAAlB,uBAON,sBAAKY,UAAU,MAAf,UACE,uBAAMG,SAzBW,SAACC,GACpBA,EAAEC,iBACFhB,KAuBE,UACE,uBACEY,KAAK,OACLlB,MAAOA,EACPuB,SAjCa,SAACF,GACpBpB,EAASoB,EAAEG,OAAOxB,QAiCZyB,YAAY,gBAEd,+CAEDvB,GACC,qBAAKe,UAAU,SAAf,SACE,cAAC,IAAD,CAAaS,KAAM,QAGvB,qBAAKT,UAAU,UAAf,SACGnB,EAAU6B,KAAI,SAACC,GACd,OACE,qBAAKX,UAAU,OAAf,SACE,qBAAKY,IAAKD,EAAIE,OAAOC,aAAaC,IAAKC,IAAI,MADlBL,EAAIM,aC1E3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f6f48375.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BiLoaderAlt } from \"react-icons/bi\";\n\nfunction App() {\n  const [dataArray, setDataArray] = useState([]);\n  const [value, setvalue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(25);\n\n  const GIPHY_API =\n    \"https://api.giphy.com/v1/gifs/search?api_key=dc6zaTOxFJmzC&limit=20&offset=0&q=\";\n\n  const fetchGifs = async () => {\n    setIsLoading(false);\n    setIsError(false);\n    try {\n      const response = await fetch(GIPHY_API + value);\n      if (response.ok) {\n        const data = await response.json();\n        setDataArray(data.data);\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (error) {\n      setIsError(true);\n      console.log(error);\n    }\n    setIsLoading(false);\n  };\n\n  const handleChange = (e) => {\n    setvalue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetchGifs();\n  };\n\n  if (isError) {\n    return (\n      <div className=\"error\">\n        Unable to get Gifs, please try again later\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={() => {\n            setIsError(false);\n          }}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={handleChange}\n          placeholder=\"Search gifs\"\n        />\n        <button>Search</button>\n      </form>\n      {isLoading && (\n        <div className=\"loader\">\n          <BiLoaderAlt size={100} />\n        </div>\n      )}\n      <div className=\"results\">\n        {dataArray.map((gif) => {\n          return (\n            <div className=\"item\" key={gif.id}>\n              <img src={gif.images.fixed_height.url} alt=\"\" />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}